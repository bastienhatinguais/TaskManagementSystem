@page "/task"
@using TaskManagementSystem.Client.Components.ToDoTask
@using TaskManagementSystem.Shared.DTOs
@using TaskManagementSystem.Shared.DTOs.ToDoTask
@inject HttpClient Http

<PageTitle>Tasks</PageTitle>

<div class="flex justify-end">
    <NavLink href="/task/new" class="ml-auto inline-flex items-center gap-1 rounded bg-blue-600 p-2 text-white hover:bg-blue-700">
        <span>
            New task
        </span>
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
            <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v6m3-3H9m12 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
        </svg>
    </NavLink>
</div>

<div class="mx-auto max-w-5xl px-6 py-10">


    @if (tasks is null)
    {
        <div class="space-y-3">
            <div class="h-10 w-full animate-pulse rounded-md bg-slate-200/70"></div>
            <div class="h-10 w-full animate-pulse rounded-md bg-slate-200/70"></div>
            <div class="h-10 w-3/4 animate-pulse rounded-md bg-slate-200/70"></div>
        </div>
    }
    else if (tasks.Count == 0)
    {
        <div class="text-center text-slate-500">
            No tasks yet. <NavLink href="/task/new" class="underline">Create one</NavLink>.
        </div>
    }
    else
    {
        <ToDoTaskList ToDoTasks="tasks" />
    }
</div>


@code {
    private List<ToDoTaskDto>? tasks;

    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        tasks = await Http.GetFromJsonAsync<List<ToDoTaskDto>>("api/task");
    }
}